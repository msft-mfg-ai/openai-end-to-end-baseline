# ------------------------------------------------------------------------------------------------------------------------
# Reusable Workflow: Scan files for security issues
# ------------------------------------------------------------------------------------------------------------------------
# NOTE: If you get the error: 'Resource not accessible by integration' on the upload step
# then you will need to go into the Repository -> Settings -> Actions -> General -> Workflow Permissions
# and enable the "Read and write permissions" to be able to publish the results
# ------------------------------------------------------------------------------------------------------------------------
name: z_template_scan_code
run-name: Run Scans
on:
  workflow_call:
    inputs:
      runMSDevSecOpsScan:
        required: false
        default: false
        type: boolean
      runGHASScan:
        required: false
        default: false
        type: boolean
      continueOnScanError:
        required: false
        default: true
        type: boolean

# ------------------------------------------------------------------------------------------------------------------------
jobs:
  ms-devsecops-scanner:
    # MSDO runs on windows-latest. ubuntu-latest and macos-latest supporting coming soon
    name: MS DevSecOps Scan
    runs-on: windows-latest
    if: inputs.runMSDevSecOpsScan
    permissions:
      # required for all workflows
      security-events: write   # needed to update the security sarif alerts
      id-token: write # needed to send results to Microsoft Defender for Cloud
      # only required for workflows in private repositories
      actions: read
      contents: write
      checks: write

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup
      uses: actions/setup-dotnet@v4
      if: inputs.runMSDevSecOpsScan
      with:
        dotnet-version: |
          8.0.x

    - name: Run MS DevSecOps Scan
      if: inputs.runMSDevSecOpsScan
      continue-on-error: ${{ inputs.continueOnScanError }}
      uses: microsoft/security-devops-action@release/vNext
      id: msdo
      # For settings, see: https://github.com/microsoft/security-devops-action/wiki
      # Trying to get this to make the step fail if scan fails, but it's not working...
      env:
        RUN_RICHEXITCODE: true
      # with:
      #   tools: templateanalyzer,terrascan,trivy

    - name: Upload MS DevSecOps alerts to Security tab
      if: inputs.runMSDevSecOpsScan
      continue-on-error: true
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: ${{ steps.msdo.outputs.sarifFile }}
 
    - name: Upload MS DevSecOps alerts to Workflow Artifacts
      if: inputs.runMSDevSecOpsScan
      uses: actions/upload-artifact@v4
      with:
        name: alerts
        path: ${{ steps.msdo.outputs.sarifFile }}

  # ------------------------------------------------------------------------------------------------------------------------
  codeql-scanner:
    name: GHAS Scan Analyze (${{ matrix.language }})
    if: inputs.runGHASScan
    runs-on: ${{ (matrix.language == 'swift' && 'macos-latest') || 'ubuntu-latest' }}
    # Runner size impacts CodeQL analysis time. To learn more, please see:
    #   - https://gh.io/recommended-hardware-resources-for-running-codeql
    #   - https://gh.io/supported-runners-and-hardware-resources
    #   - https://gh.io/using-larger-runners (GitHub.com only)
    # Consider using larger runners or machines with greater resources for possible analysis time improvements.
    permissions:
      # required for all workflows
      security-events: write
      # required to fetch internal or private CodeQL packs
      packages: read
      # only required for workflows in private repositories
      actions: read
      contents: read

    strategy:
      fail-fast: false
      matrix:
        include:
        - language: python
          build-mode: none
        - language: javascript-typescript
          build-mode: none
        # CodeQL supports the following values keywords for 'language': 'c-cpp', 'csharp', 'go', 'java-kotlin', 'javascript-typescript', 'python', 'ruby', 'swift'
        # Use `c-cpp` to analyze code written in C, C++ or both
        # Use 'java-kotlin' to analyze code written in Java, Kotlin or both
        # Use 'javascript-typescript' to analyze code written in JavaScript, TypeScript or both
        # To learn more about changing the languages that are analyzed or customizing the build mode for your analysis,
        # see https://docs.github.com/en/code-security/code-scanning/creating-an-advanced-setup-for-code-scanning/customizing-your-advanced-setup-for-code-scanning.
        # If you are analyzing a compiled language, you can modify the 'build-mode' for that language to customize how
        # your codebase is analyzed, see https://docs.github.com/en/code-security/code-scanning/creating-an-advanced-setup-for-code-scanning/codeql-code-scanning-for-compiled-languages
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    # Initializes the CodeQL tools for scanning.
    - name: Initialize CodeQL
      if: inputs.runGHASScan
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ matrix.language }}
        build-mode: ${{ matrix.build-mode }}
        # If you wish to specify custom queries, you can do so here or in a config file.
        # By default, queries listed here will override any specified in a config file.
        # Prefix the list here with "+" to use these queries and those in the config file.

        # For more details on CodeQL's query packs, refer to: https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs
        # queries: security-extended,security-and-quality

    # If the analyze step fails for one of the languages you are analyzing with
    # "We were unable to automatically build your code", modify the matrix above
    # to set the build mode to "manual" for that language. Then modify this step
    # to build your code.
    # ‚ÑπÔ∏è Command-line programs to run using the OS shell.
    # üìö See https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_idstepsrun
    - if: matrix.build-mode == 'manual'
      shell: bash
      run: |
        echo 'If you are using a "manual" build mode for one or more of the' \
          'languages you are analyzing, replace this with the commands to build' \
          'your code, for example:'
        echo '  make bootstrap'
        echo '  make release'
        exit 1

    - name: Perform CodeQL Analysis
      if: inputs.runGHASScan
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:${{matrix.language}}"
